defaults: &defaults
  working_directory: ~/
  docker:
    - image: surenwork/ngk-boilerplate:0.1.16
version: 2
jobs:
   build:
     <<: *defaults
     working_directory: ~/source
     steps:
       - checkout
       - restore_cache:
           key: dependency-cache-{{ checksum "package.json" }}
       - run:
           name: Install npm wee
           command: npm install
       - save_cache:
           key: dependency-cache-{{ checksum "package.json" }}
           paths:
             - node_modules
       - run:
           name: Build the Application
           command: npm run build
       - persist_to_workspace:
           root: ~/source
           paths:
             - dist
             - .dockerignore
             - .env
             - .gitignore
             - Dockerfile
             - openapi.yaml
             - package.json
   deploy:
     <<: *defaults
     steps:
       - setup_remote_docker:   # (2)
          docker_layer_caching: true # (3)
       - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/source
       - run: echo "hello world"
       - run: ls -la ~/source
       - run:
          name: Setting Up the enviornment variables
          command: |
            sed -i 's/\r$//' ~/1-update_buildenv.sh
            bash ~/1-update_buildenv.sh
       - run:
          name: Setting Up Google Cloud Environment
          command: |
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            sed -i 's/\r$//' ~/2-setup_gcloud.sh
            bash ~/2-setup_gcloud.sh
       - run:
          name: Build and push service container to GCP container
          command: |
            sed -i 's/\r$//' ~/3-build_push_service_container.sh
            bash ~/3-build_push_service_container.sh
       - run:
          name: Setup Endpoint for the API and Add the API URL to DNS
          command: |
            sed -i 's/\r$//' ~/4-deploy_endpoint.sh
            bash ~/4-deploy_endpoint.sh
       - run:
          name: Obtain SSL/TLS Certification for the hostname
          command: |
            sed -i 's/\r$//' ~/5-get_ssl_certificate.sh
            bash ~/5-get_ssl_certificate.sh
       - run:
          name: Check if Dist folder has deployed files
          command: |
            ls -la ~/source/dist
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
